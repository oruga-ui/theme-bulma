@use "bulma/sass/utilities/css-variables" as css;
@use "bulma/sass/utilities/mixins" as mixins;
@use "utils/variables" as vars;

.autocomplete {
    @include css.register-vars(
        (
            "dropdown-content-max-height": #{vars.$dropdown-content-max-height},
        )
    );

    @include mixins.unselectable;

    position: relative;

    .dropdown-content {
        overflow: auto;
        max-height: css.getVar("dropdown-content-max-height");
    }

    .dropdown-item {
        background-color: hsl(
            #{css.getVar("dropdown-item-h")},
            #{css.getVar("dropdown-item-s")},
            calc(
                #{css.getVar("dropdown-item-background-l")} +
                    #{css.getVar("dropdown-item-background-l-delta")}
            )
        );
        width: 100%;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        cursor: pointer;

        &.is-hovered,
        &:hover {
            @include css.register-vars(
                (
                    "dropdown-item-background-l-delta": #{css.getVar(
                            "dropdown-item-hover-background-l-delta"
                        )},
                    "dropdown-item-border-l-delta": #{css.getVar(
                            "dropdown-item-hover-border-l-delta"
                        )},
                )
            );
        }

        &:active {
            @include css.register-vars(
                (
                    "dropdown-item-background-l-delta": #{css.getVar(
                            "dropdown-item-active-background-l-delta"
                        )},
                    "dropdown-item-border-l-delta": #{css.getVar(
                            "dropdown-item-active-border-l-delta"
                        )},
                )
            );
        }

        &.is-disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
    }
}
